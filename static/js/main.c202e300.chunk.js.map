{"version":3,"sources":["components/Gather.js","components/Dog.js","App.js","reportWebVitals.js","index.js"],"names":["GetRandom","props","handleSearchClickCat","a","linkToCatPic","axios","get","response","response_pic","randNum","Math","floor","random","setState","randomFact","data","text","foundFact","randomPicture","foundPic","state","className","onClick","this","src","id","Component","DogPart","handleSearchClickDog","handleSearchClickFox","response_fox","console","log","randomFox","foundFox","App","Dog","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA6DeA,E,kDAzDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,qBAVmB,sBAUI,kCAAAC,EAAA,4DACD,uCAChBC,EAAe,8BAFE,kBAMEC,IAAMC,IALT,wCADC,cAMfC,EANe,gBAOMF,IAAMC,IAAIF,GAPhB,OAOfI,EAPe,OAWfC,EAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAG9C,EAAKC,SAAS,CACZC,WAAYP,EAASQ,KAAKN,GAASO,KACnCC,WAAW,IAGb,EAAKJ,SAAS,CACZK,cAAeV,EAAaO,KAAb,KACfI,UAAU,IArBO,4GARrB,EAAKC,MAAQ,CACXF,cAAe,GACfJ,WAAY,GACZK,UAAU,EACVF,WAAW,GANI,E,0CAuCnB,WACE,OACE,gCACE,wBAAQI,UAAU,gBAAgBC,QAASC,KAAKrB,qBAAhD,2BAGA,uBACA,8BACE,qBAAKsB,IAAKD,KAAKH,MAAMF,kBAEvB,qBAAKO,GAAG,WAAR,SACE,4BAAIF,KAAKH,MAAMN,sB,GAnDDY,aCkETC,E,kDAjEb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IASR2B,qBAVmB,sBAUI,4BAAAzB,EAAA,4DACF,0CADE,kBAIME,IAAMC,IAHd,2CADE,OAIfE,EAJe,OAOnB,EAAKK,SAAS,CACZK,cAAeV,EAAaO,KAAb,QACfI,UAAU,IATO,yGAVJ,EA4BnBU,qBA5BmB,sBA4BI,4BAAA1B,EAAA,4DACF,8BADE,kBAIME,IAAMC,IAHd,+BADE,OAIfwB,EAJe,OAMnBC,QAAQC,IAAIF,EAAaf,MAGzB,EAAKF,SAAS,CACZoB,UAAWH,EAAaf,KAAb,MACXmB,UAAU,IAXO,yGA1BrB,EAAKd,MAAQ,CACXF,cAAe,GACfC,UAAU,EACVc,UAAW,GACXC,UAAU,GANK,E,0CA8CnB,WACE,OACE,gCACE,wBAAQb,UAAU,gBAAgBC,QAASC,KAAKK,qBAAhD,mCAGA,uBACA,qBAAKJ,IAAKD,KAAKH,MAAMF,gBACrB,uBACA,wBAAQG,UAAU,gBAAgBC,QAASC,KAAKM,qBAAhD,mCAGA,uBACA,qBAAKL,IAAKD,KAAKH,MAAMa,mB,GA5DPP,aCaPS,MAZf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,+DACA,cAAC,EAAD,IACA,cAACe,EAAD,UCEOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c202e300.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass GetRandom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      randomPicture: \"\",\r\n      randomFact: [],\r\n      foundPic: false,\r\n      foundFact: false,\r\n    };\r\n  }\r\n\r\n  handleSearchClickCat = async () => {\r\n    let linkToCatFact = \"https://cat-fact.herokuapp.com/facts\";\r\n    let linkToCatPic = \"https://aws.random.cat/meow\";\r\n\r\n    try {\r\n      //get the link info\r\n      let response = await axios.get(linkToCatFact);\r\n      let response_pic = await axios.get(linkToCatPic);\r\n      //console.log(response_pic.data['file']);\r\n\r\n      //since the link info only returns 5 different facts, randNum choose one of the five\r\n      let randNum = Math.floor(Math.random() * 5) + 1;\r\n\r\n      //set the state to the random fact\r\n      this.setState({\r\n        randomFact: response.data[randNum].text,\r\n        foundFact: true,\r\n      });\r\n      //set the state to the random cat picture\r\n      this.setState({\r\n        randomPicture: response_pic.data[\"file\"],\r\n        foundPic: true,\r\n      });\r\n      //console.log(this.state.randomFact);\r\n    } catch {\r\n      //does nothing\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"search-button\" onClick={this.handleSearchClickCat}>\r\n          Click for Cat\r\n        </button>\r\n        <br />\r\n        <div > \r\n          <img src={this.state.randomPicture} />\r\n        </div>\r\n        <div id=\"catStuff\">\r\n          <p>{this.state.randomFact}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetRandom;\r\n","import { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass DogPart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      randomPicture: \"\",\r\n      foundPic: false,\r\n      randomFox: \"\",\r\n      foundFox: false,\r\n    };\r\n  }\r\n\r\n  handleSearchClickDog = async () => {\r\n    let linkToDogPic = \"https://dog.ceo/api/breeds/image/random\";\r\n    try {\r\n      //get the link info\r\n      let response_pic = await axios.get(linkToDogPic);\r\n\r\n      //set the state to the random dog picture\r\n      this.setState({\r\n        randomPicture: response_pic.data[\"message\"],\r\n        foundPic: true,\r\n      });\r\n\r\n      //console.log(this.state.randomFact);\r\n    } catch {\r\n      //does nothing\r\n    }\r\n  };\r\n\r\n  handleSearchClickFox = async () => {\r\n    let linkToFoxPic = \"https://randomfox.ca/floof/\";\r\n    try {\r\n      //get the link info\r\n      let response_fox = await axios.get(linkToFoxPic);\r\n\r\n      console.log(response_fox.data);\r\n\r\n      //set the state to the random fox picture\r\n      this.setState({\r\n        randomFox: response_fox.data[\"image\"],\r\n        foundFox: true,\r\n      });\r\n      //console.log(this.state.randomFact);\r\n    } catch {\r\n      //does nothing\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"search-button\" onClick={this.handleSearchClickDog}>\r\n          Click for Dog Picture\r\n        </button>\r\n        <br />\r\n        <img src={this.state.randomPicture} />\r\n        <br />\r\n        <button className=\"search-button\" onClick={this.handleSearchClickFox}>\r\n          Click for Fox Picture\r\n        </button>\r\n        <br />\r\n        <img src={this.state.randomFox} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DogPart;\r\n","import \"./App.css\";\r\nimport GetRandom from \"./components/Gather\";\r\nimport DogPart from \"./components/Dog\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n        <h1>Picture of Cat, Fox, and Dog:</h1>\r\n        <GetRandom />\r\n        <DogPart />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}